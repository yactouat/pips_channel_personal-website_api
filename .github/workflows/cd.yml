name: CD

on:
  # this action will only run if you create a release
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build app' and deploy to GCP
    environment: live
    steps:
      - uses: actions/checkout@v3
      - name: set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - id: "auth-to-gcp"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CLOUDRUN_CREDENTIALS }}"
      - name: "set up Google Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
      - name: "deploy from source"
        run: |
          gcloud run deploy ${{ secrets.GCP_CLOUDRUN_SERVICE_NAME }} \
            --source=./ --region=${{ vars.GCP_REGION }} --port=${{ vars.GCP_PORT }} \
            --update-secrets=${{ secrets.GCP_STORAGE_CREDENTIALS_SECRET_PATH }}=GCP_STORAGE_CREDENTIALS:latest,${{ secrets.PGSSLROOTCERT }}=PGSSLROOTCERT:latest \
            --set-env-vars=GCP_STORAGE_CREDENTIALS_SECRET_PATH=${{ secrets.GCP_STORAGE_CREDENTIALS_SECRET_PATH }},NODE_ENV=production,GCP_BUCKET=${{ secrets.GCP_BUCKET }},VERCEL_PROJECT=${{ secrets.VERCEL_PROJECT }},VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }},PGSSLROOTCERT=${{ secrets.PGSSLROOTCERT }},PGHOST=${{ secrets.PGHOST }},PGPASSWORD=${{ secrets.PGPASSWORD }},PGPORT=${{ secrets.PGPORT }},PGSSLMODE=${{ secrets.PGSSLMODE }},PGUSER=${{ secrets.PGUSER }},PGDATABASE=${{ secrets.PGDATABASE }} \
            --allow-unauthenticated
